#!/usr/bin/env python
# coding: utf-8

import pandas as pd
import numpy as np
import streamlit as st

from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.metrics import mean_squared_error

from sklearn.experimental import enable_hist_gradient_boosting
from sklearn.ensemble import HistGradientBoostingRegressor 

import data_exploration

def main():
    data, model = load_data()
    # slut = np.array([18, 1, 165, 42, 45]).reshape((1,-1))
    create_layout(data, model)
    

@st.cache
def fit_model(x_train, y_train, model):
    model.fit(x_train, y_train)
    return model

@st.cache
def load_data():
    df = pd.read_csv('out.csv')
    data = df[['Age', 'Boobs', 'Height', 'Size', 'Weight']]
    target = pd.DataFrame(df['Price_USD'])

    model = HistGradientBoostingRegressor()
    x_train, x_test, y_train, y_test = train_test_split(data, target, random_state=42, test_size=0.33)
    model = fit_model(x_train, y_train, model)
    return data, model
@st.cache
def load_homepage(model):
    
    st.header('–°–∫–æ–ª—å–∫–æ —Ç—ã —Å—Ç–æ–∏—à—å?üíª')
    st.subheader('–¢—ã –º–æ–∂–µ—à—å –æ—Ü–µ–Ω–∏—Ç—å —Å–≤–æ—é **—á–∞—Å–æ–≤—É—é –æ–ø–ª–∞—Ç—É** –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–≤–æ–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤. ')
    st.image("https://user-images.githubusercontent.com/61186465/100323397-bd473780-2fd6-11eb-8633-75e83392e691.jpg",
                 use_column_width=True)
   
    st.markdown("–í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –¥–∞—Ç–∞—Å–µ—Ç–∞ —Å–æ —à–ª—é—Ö–∞–º–∏")
    st.markdown("**‚ôü –î–æ–º–∞—à–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ ‚ôü**")
    
    st.sidebar.header('–í–≤–µ–¥–∏ —Å–≤–æ–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã')
    age = st.sidebar.slider('–í–æ–∑–≤—Ä–∞—Å—Ç', min_value=18, max_value=50, value=18, step=1, key='age')
    boobs = st.sidebar.slider('–†–∞–∑–º–µ—Ä –≥—Ä—É–¥–∏', min_value=1, max_value=7, value=1, step=1, key='boobs')
    height = st.sidebar.slider('–†–æ—Å—Ç, —Å–º', min_value=120, max_value=200, value=165, key='height')
    size = st.sidebar.slider('–†–∞–∑–º–µ—Ä –æ–¥–µ–∂–¥—ã',  min_value=38, max_value=56, value=42, step=2, key='size')
    weight = st.sidebar.slider('–í–µ—Å, –∫–≥', min_value=40, max_value=150, value=45, key='weight')

    slut = np.array([age, boobs, height, size, weight]).reshape((1,-1))
    cost_slut = model.predict(slut)

    st.subheader('–í–∞—à–∞ —Å—Ç–æ–∏–º–æ—Å—Ç—å –≤ –¥–æ–ª–ª–∞—Ä–∞—Ö')
    st.write(cost_slut)

    if cost_slut < 50:
        st.subheader('–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ—Å—å –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–î–µ—à–µ–≤—ã–µ —à–ª—é—Ö–∏"')

    if cost_slut < 100 and cost_slut >= 50:
        st.subheader('–ù–µ —Ç–∞–∫ —É–∂ –∏ –ø–ª–æ—Ö–æ, –≤—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ—Å—å –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–°—Ä–µ–¥–Ω–∏–µ —à–ª—é—à–∫–∏"')    

    if cost_slut >= 100:
        st.subheader('–ü–æ–∑—Ä–∞–≤–ª—è–µ–º, –≤—ã –æ—Ç–Ω–æ—Å–∏—Ç–µ—Å—å –∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ "–≠–ª–∏—Ç–Ω—ã–µ —ç—Å–∫–æ—Ä—Ç–Ω–∏—Ü—ã"')

    
    
def create_layout(data, model):

    st.sidebar.title("Menu")
    app_mode = st.sidebar.selectbox("Please select a page", ["Homepage", "Data Exploration"])
    
    if app_mode == 'Homepage':
        load_homepage(model)  
        
    elif app_mode == 'Data Exploration':
        data_exploration.load_page(data)

if __name__ == "__main__":
    main()       
